@page "/admin/appointments/{option?}"
@using JricaStudioSharedLibrary.enums;
@using JricaStudioApp.Pages.Admin.Appointments.Components;
@using JricaStudioApp.Extensions;

@inherits  AdminAppointmentsPageBase    
<div class="mb-3">
    <AdminToolbar></AdminToolbar>

</div>

@if (Admin == null)
{
    <DisplaySpinner ></DisplaySpinner>
}
else
{
    <div class="col">
        <div class="row mb-3">
            <h2>Appointment Administration</h2>
        </div>
        
        
        <div class="row mb-3 bg-dark border rounded p-1" Style="border-color:#444 !important">
            <h4>Filter</h4>
            <div class="col-lg-7 col-12 m-2 d-flex justify-content-between align-items-center">
                <input class="form-control" @bind="@Filter.SearchString" @onkeyup="Enter" placeholder="Search">
            </div>
            <div class="col-lg-3 col-12 d-flex align-items-center justify-content-center">
                <div>
                    <InputSelect @bind-Value="@Filter.Status" class="m-3">
                        @foreach (var status in Enum.GetValues(typeof(AppointmentStatus)))
                        {
                            <option  value="@status">@status.ToString().FromPascalToString()</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="col d-flex justify-content-center m-3">
                <a class="btn btn-success jay-green-bg"  @onclick="() => SearchAppointments_Click()">Search</a>
            </div>
        </div>
        
        <div class="row">
            
            <div class="col-12 col-lg-7">
                <div class="row mt-3 mb-3">
                    <div class="col">
                        <a @onclick="() => AddNewAppointment_Click()" class="btn btn-success jay-green-bg">New Appointment</a>
                    </div>
                </div>
                <table class="table border table-dark" Style="border-color:#444 !important">
                    <thead>
                        <tr>
                            <th scope="col" class="small">User</th>
                            <th scope="col" class="small">Start Time</th>
                            <th scope="col" class="small">Duration</th>
                            <th scope="col" class="small">Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Appointments == null)
                        {
                            <tr>
                                <td class="small">
                                    Appointments are null
                                </td>
                                <td class="small">
                                </td>
                                <td class="small">
                                </td>
                                <td class="small">
                                </td>
                            </tr>
                        }
                        else
                        {
                            if (Appointments.Count() == 0)
                            {
                                <tr>
                                    <td class="small">
                                        No Appointments
                                    </td>
                                    <td class="small">
                                    </td>
                                    <td class="small">
                                    </td>
                                    <td class="small">
                                    </td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var item in Appointments)
                                {
                                    <tr @onclick="() => SelectAppointment_Click(item)" class="mouse-over-highlight" Style="border-color:#444 !important">

                                        <td class="small">@item.User.FirstName @item.User.LastName</td>
                                        <td class="small">@DisplayTime(item.StartTime)</td>
                                        <td class="small"> @DisplayTimeSpan(item.StartTime, item.EndTime)</td>
                                        <td class="small">@item.Status.ToString().FromPascalToString()</td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="col col-lg-5 h-100">
             
                <AdminAppointmentDetails Appointment="@SelectedAppointment"></AdminAppointmentDetails>
                @if (SelectedAppointment != null)
                {
                    <div class="w-100 d-flex justify-content-between m-1 pt-4">
                        <a class="btn text-nowrap btn-success jay-green-bg" @onclick="() => EditAppointment_Click(SelectedAppointment.Id)">More Options</a>
                        @if(SelectedAppointment.Status == AppointmentStatus.AwaitingApproval)
                        {
                            <a @onclick="() => AdminUpdateAppointmentStatus_Click(AppointmentStatus.Confirmed)" class="btn btn-success text-nowrap jay-green-bg">Confirm</a>
                            <a @onclick="() => AdminUpdateAppointmentStatus_Click(AppointmentStatus.CancelledByOperator)" class="btn btn-success text-nowrap jay-green-bg">Deny</a>
                        }
                        @if (SelectedAppointment.Status == AppointmentStatus.Confirmed)
                        {
                            <a @onclick="() => AdminUpdateAppointmentStatus_Click(AppointmentStatus.Complete)" class="btn btn-success text-nowrap jay-green-bg">Completed</a>
                            <a @onclick="() => AdminUpdateAppointmentStatus_Click(AppointmentStatus.NoShow)" class="btn btn-success text-nowrap jay-green-bg">No Show</a>
                        }
                    </div>
                }
            </div>
        </div>
            
    </div>
    <hr />
    <BusinessHoursAdministration></BusinessHoursAdministration>
    <hr />
    <BlockOutDatesAdministration></BlockOutDatesAdministration>
    
}
@code{
    protected string DisplayTime(DateTime? time)
    {
        if (time == null)
        {
            return "None";
        }
        else
        {
            var newTime = (DateTime)time;
            return newTime.ToString("hh:mm tt - dd/MM/yyyy");
        }
    }

    protected string DisplayTimeSpan(DateTime? nullableStart, DateTime? nullableEnd)
    {
        if (nullableStart == null || nullableEnd == null)
        {
            return "N/A";
        }
        else
        {
            var start = (DateTime)nullableStart;
            var end = (DateTime)nullableEnd;

            return (end - start).TotalMinutes + " Minutes";
        }
    }
}
